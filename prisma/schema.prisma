datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  role          UserRole  @default(ADMIN)
  password      String
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.String
  access_token      String?  @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.String
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// Add slugs to the models
model Category {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  slug    String
  Product Product[]

  @@index([slug])
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String
  label       String
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  description String
  imgUrl      String

  @@index([slug])
}

model Companies {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageUrl String
}

// model Client {
//   id          String @id @default(auto()) @map("_id") @db.ObjectId
//   title       String
//   description String
//   imageUrl    String
// }

enum Status {
  Pending
  Running
  Finished
}

model Rodmap {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  text     String
  date     String
  status   Status @default(Running)
  imageUrl String
}
